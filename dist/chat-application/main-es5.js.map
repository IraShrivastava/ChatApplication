{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/chat/chat-box/chat-box.component.ts","webpack:///src/app/chat/chat-box/chat-box.component.html","webpack:///src/app/chat/chat-route-guard.service.ts","webpack:///src/app/chat/chat.module.ts","webpack:///src/app/shared/first-char/first-char.component.ts","webpack:///src/app/shared/first-char/first-char.component.html","webpack:///src/app/shared/pipe/remove-special-char.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/user-details/user-details.component.ts","webpack:///src/app/shared/user-details/user-details.component.html","webpack:///src/app/socket.service.ts","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/signup/signup.component.ts","webpack:///src/app/user/signup/signup.component.html","webpack:///src/app/user/user.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","path","component","pathMatch","redirectTo","declarations","imports","providers","bootstrap","AppService","http","url","getUserInfoFromLocalstorage","JSON","parse","localStorage","getItem","setUserInfoInLocalStorage","data","setItem","stringify","params","set","firstName","lastName","mobile","email","password","apiKey","post","get","err","errorMessage","error","message","status","console","ChatBoxComponent","SocketService","router","toastr","vcr","userList","scrollToChatTop","previousChatList","messageList","pageValue","loadingPreviousChat","verifyUserConfirmation","verifyUser","subscribe","disconnectedSocket","setUser","authToken","getOnlineUserList","onlineUserList","x","temp","push","log","getPreviousChatWithAUser","previousData","length","slice","getChat","userInfo","userId","receiverId","apiResponse","concat","warningToastr","errorToastr","loadEarlierPageOfChat","userSelectedToChat","name","map","user","chatting","receiverName","chatDetails","senderId","markChatAsSeen","sendMessageUsingKeypress","event","keyCode","sendMessage","messageText","chatMsgObject","senderName","createdOn","Date","SendChatMessage","pushToChatWindow","getMessageFromAUser","chatByUserId","successToastr","logout","exitSocket","navigate","showUserName","undefined","read","ChatRouteGuardService","route","ChatModule","forChild","canActivate","FirstCharComponent","_name","notify","firstChar","changes","currentValue","emit","nameClicked","RemoveSpecialCharPipe","value","character","replace","SharedModule","UserDetailsComponent","userFirstName","create","observer","socket","on","next","userDetails","disconnect","skip","handleError","LoginComponent","appService","goToSignUp","signinFunction","SignupComponent","goToSignIn","signupFunction","setTimeout","UserModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\n//importing routing module\nimport { RouterModule, Routes } from '@angular/router';\n//importing generated modules and components\nimport { UserModule } from './user/user.module';\nimport { ChatModule } from './chat/chat.module';\nimport { LoginComponent } from './user/login/login.component';\n//import the service to be used\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\n//import toastr module\nimport { ToastrModule } from 'ng6-toastr-notifications';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    ChatModule,\n    UserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent, pathMatch: 'full' },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: '*', component: LoginComponent },\n      { path: '**', component: LoginComponent }\n    ])\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/toPromise';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from \"@angular/common/http\";\n\n@Injectable()\nexport class AppService {\n\n  //store url for backend\n  private url = 'https://chatapi.edwisor.com';\n\n  constructor(public http: HttpClient) {\n  } // end constructor  \n\n  //method to get user details from local storage\n  public getUserInfoFromLocalstorage = () => {\n    return JSON.parse(localStorage.getItem('userInfo'));\n  } // end getUserInfoFromLocalstorage\n\n  //method to set user details in local storage\n  public setUserInfoInLocalStorage = (data) => {\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  }\n\n  //method for signing up the user\n  public signupFunction(data): Observable<any> {\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('mobile', data.mobile)\n      .set('email', data.email)\n      .set('password', data.password)\n      .set('apiKey', data.apiKey);\n    return this.http.post(`${this.url}/api/v1/users/signup`, params);\n  } // end of signupFunction function.\n\n  //method to sign in the user\n  public signinFunction(data): Observable<any> {\n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password);\n    return this.http.post(`${this.url}/api/v1/users/login`, params);\n  } // end of signinFunction function.\n\n  //method to logout from the user's account\n  public logout(): Observable<any> {\n    const params = new HttpParams()\n      .set('authToken', Cookie.get('authtoken'))\n    return this.http.post(`${this.url}/api/v1/users/logout`, params);\n  } // end logout function\n\n  //method to handle error\n  private handleError(err: HttpErrorResponse) {\n    let errorMessage = '';\n    if (err.error instanceof Error) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    } // end condition\n    console.error(errorMessage);\n    return Observable.throw(errorMessage);\n  }  // END handleError\n\n}","import { Component, OnInit, ViewContainerRef, ViewChild, ElementRef, ChangeDetectionStrategy } from '@angular/core';\n//import the services to be used\nimport { SocketService } from './../../socket.service';\nimport { AppService } from './../../app.service';\n//import router & cookie module\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n//import toastr module and shared components\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { FirstCharComponent } from '../../shared/first-char/first-char.component';\n//import the interface\nimport { ChatMessage } from './chat';\nimport { CheckUser } from './../../CheckUser';\n\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css'],\n  //adding socket service into the local providers array of the component\n  providers: [SocketService],\n})\n\nexport class ChatBoxComponent implements OnInit {\n\n  @ViewChild('scrollMe', { read: ElementRef })\n\n  public scrollMe: ElementRef;\n\n  public authToken: any;\n  public userInfo: any;\n  public receiverId: any;\n  public receiverName: any;\n  public userList: any = [];\n  public disconnectedSocket: boolean;\n\n  public scrollToChatTop: boolean = false;\n\n  public previousChatList: any = [];\n  public messageText: any;\n  public messageList = []; // stores the current message list display in chat box\n  public pageValue: number = 0;\n  public loadingPreviousChat: boolean = false;\n\n  constructor(\n    public AppService: AppService,\n    public SocketService: SocketService,\n    public router: Router,\n    private toastr: ToastrManager,\n    vcr: ViewContainerRef,\n  ) {\n      \n  }\n\n\n\n  ngOnInit() {\n\n    this.authToken = Cookie.get('authtoken');\n    this.userInfo = this.AppService.getUserInfoFromLocalstorage();\n    this.receiverId = Cookie.get(\"receiverId\");\n    this.receiverName = Cookie.get('receiverName');\n\n    console.log(this.receiverId, this.receiverName)\n\n    if (this.receiverId != null && this.receiverId != undefined && this.receiverId != '') {\n      this.userSelectedToChat(this.receiverId, this.receiverName)\n    }\n    // this.checkStatus();\n    this.verifyUserConfirmation();\n    this.getOnlineUserList()\n    this.getMessageFromAUser()\n\n  }\n\n  // public checkStatus: any = () => {\n  //   if (Cookie.get('authtoken') === undefined || Cookie.get('authtoken') === '' || Cookie.get('authtoken') === null) {\n  //     this.router.navigate(['/']);\n  //     return false;\n  //   } else {\n  //     return true;\n  //   }\n  // } // end checkStatus\n\n  public verifyUserConfirmation: any = () => {\n    this.SocketService.verifyUser()\n      .subscribe((data) => {\n\n        this.disconnectedSocket = false;\n        this.SocketService.setUser(this.authToken);\n\n      });\n  }\n\n  public getOnlineUserList: any = () => {\n\n    this.SocketService.onlineUserList()\n      .subscribe((userList) => {\n\n        this.userList = [];\n        for (let x in userList) {\n          let temp = { 'userId': x, 'name': userList[x], 'unread': 0, 'chatting': false };\n          this.userList.push(temp);\n        }\n\n        console.log(this.userList);\n      }); // end online-user-list\n  }\n  \n  // chat related methods \n  public getPreviousChatWithAUser: any = () => {\n    let previousData = (this.messageList.length > 0 ? this.messageList.slice() : []);\n    this.SocketService.getChat(this.userInfo.userId, this.receiverId, this.pageValue * 10)\n      .subscribe((apiResponse) => {\n\n        console.log(apiResponse);\n        if (apiResponse.status == 200) {\n          this.messageList = apiResponse.data.concat(previousData);\n          console.log(\"messagelist\")\n          console.log(this.messageList)\n        } else {\n          this.messageList = previousData;\n          this.toastr.warningToastr('No Messages available')\n        }\n        this.loadingPreviousChat = false;\n\n      }, (err) => {\n        this.toastr.errorToastr('some error occured')\n      });\n\n  }// end get previous chat with any user\n  \n  public loadEarlierPageOfChat: any = () => {\n    this.loadingPreviousChat = true;\n    this.pageValue++;\n    this.scrollToChatTop = true;\n    this.getPreviousChatWithAUser()\n  } // end loadPreviousChat\n\n  public userSelectedToChat: any = (id, name) => {\n    console.log(\"setting user as active\")\n    // setting that user to chatting true   \n    this.userList.map((user) => {\n      if (user.userId == id) {\n        user.chatting = true;\n      }\n      else {\n        user.chatting = false;\n      }\n    })\n    console.log(\"user selected\")\n    console.log(id)\n    console.log(name)\n    Cookie.set('receiverId', id);\n    Cookie.set('receiverName', name);\n    this.receiverName = name;\n    this.receiverId = id;\n    this.messageList = [];\n    this.pageValue = 0;\n    let chatDetails = {\n      userId: this.userInfo.userId,\n      senderId: id\n    }\n    this.SocketService.markChatAsSeen(chatDetails);\n    this.getPreviousChatWithAUser();\n  } // end userBtnClick function\n\n  public sendMessageUsingKeypress: any = (event: any) => {\n    if (event.keyCode === 13) { // 13 is keycode of enter.\n      this.sendMessage();\n    }\n  } // end sendMessageUsingKeypress\n\n  public sendMessage: any = () => {\n    if (this.messageText) {\n      let chatMsgObject: ChatMessage = {\n        senderName: this.userInfo.firstName + \" \" + this.userInfo.lastName,\n        senderId: this.userInfo.userId,\n        receiverName: Cookie.get('receiverName'),\n        receiverId: Cookie.get('receiverId'),\n        message: this.messageText,\n        createdOn: new Date()\n      } // end chatMsgObject\n      console.log(chatMsgObject);\n      this.SocketService.SendChatMessage(chatMsgObject)\n      this.pushToChatWindow(chatMsgObject)\n    }\n    else {\n      this.toastr.warningToastr('text message can not be empty')\n    }\n  } // end sendMessage\n\n  public pushToChatWindow: any = (data) => {\n    this.messageText = \"\";\n    this.messageList.push(data);\n    this.scrollToChatTop = false;\n  }// end push to chat window\n\n  public getMessageFromAUser: any = () => {\n\n    this.SocketService.chatByUserId(this.userInfo.userId)\n      .subscribe((data) => {\n        (this.receiverId == data.senderId) ? this.messageList.push(data) : '';\n        this.toastr.successToastr(`${data.senderName} says : ${data.message}`)\n        this.scrollToChatTop = false;\n      });//end subscribe\n\n  }// end get message from a user \n\n  public logout: any = () => {\n\n    this.AppService.logout()\n      .subscribe((apiResponse) => {\n        if (apiResponse.status === 200) {\n          console.log(\"logout called\")\n          Cookie.delete('authtoken');\n          Cookie.delete('receiverId');\n          Cookie.delete('receiverName');\n          Cookie.delete('senderId');\n          Cookie.delete('senderName')\n          this.SocketService.exitSocket()\n          this.router.navigate(['/']);\n        } else {\n          this.toastr.errorToastr(apiResponse.message)\n        } // end condition\n\n      }, (err) => {\n        this.toastr.errorToastr('some error occured')\n      });\n\n  } // end logout\n\n  // handle the output from a child component \n  public showUserName = (name: string) => {\n    this.toastr.successToastr(\"You are chatting with \" + name)\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n\n    <div class=\"displayBlockMobile\" style=\"position:fixed;width:100%;z-index:1;\">\n\n      <div class=\"col-sm-12 p-0\">\n\n        <nav class=\"navbar navbar-expand-md navbar-fixed navbar-dark bg-dark\">\n\n          <a class=\"navbar-brand text-white\">\n            {{userInfo.firstName}} {{userInfo.lastName}}\n            <i class=\"fa fa-circle online\" *ngIf=\"disconnectedSocket == false\"></i>\n            <i class=\"fa fa-circle offline\" *ngIf=\"disconnectedSocket == true\"></i>\n          </a>\n\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\n            <span class=\"navbar-toggler-icon\"></span>\n\n          </button>\n\n          <div class=\"collapse people-list navbar-collapse\" id=\"navbarSupportedContent\">\n\n            <ul class=\"list\">\n              <li class=\"p-2 typeOfChats\">\n                Online Users:\n              </li>\n              <li class=\"clearfix cursorPointer\" [ngClass]=\"{'activeChat': user.chatting == true}\" (click)=\"userSelectedToChat(user.userId, user.name)\"\n                *ngFor=\"let user of userList\">\n                <div class=\"userPresence\" *ngIf=\"user.userId != userInfo.userId\">\n                  <user-details [userFirstName]=\"user.name\" [userLastName]=\"''\" [userStatus]=\"'online'\" [messageRead]=\"user.unread\"></user-details>\n                </div>\n              </li>\n              \n            </ul>\n\n          </div>\n\n        </nav>\n\n      </div>\n\n    </div>\n\n    <div class=\"col-12 displayNoneMobile col-sm-4 col-md-4 people-list p-0\" id=\"people-list\">\n\n      <div class=\"p-3 text-white textCapitalize textCenter\">\n        {{userInfo.firstName}} {{userInfo.lastName}}\n        <i class=\"fa fa-circle online\" *ngIf=\"disconnectedSocket == false\"></i>\n        <i class=\"fa fa-circle offline\" *ngIf=\"disconnectedSocket == true\"></i>\n        <br>\n        <br>\n        <button (click)=\"logout()\" class=\"btn btn-info customButton\">Logout</button>\n      </div>\n\n      <ul class=\"list\">\n        <li class=\"p-2 typeOfChats\">\n          Online Users:\n        </li>\n        <li class=\"clearfix cursorPointer\" [ngClass]=\"{'activeChat': user.chatting == true}\"\n          *ngFor=\"let user of userList\" (click)=\"userSelectedToChat(user.userId, user.name)\">\n          <div class=\"userPresence\" *ngIf=\"user.userId != userInfo.userId\"  >\n            <user-details [userFirstName]=\"user.name\" [userLastName]=\"''\" [userStatus]=\"'online'\" [messageRead]=\"user.unread\"></user-details>\n          </div>\n        </li>\n       \n      </ul>\n\n\n    </div>\n\n    <div class=\"col-12 col-sm-8 col-md-8 chat\">\n      <div class=\"chat-header clearfix mobileMenu\" *ngIf=\"receiverName\">\n        <first-char [name]=\"receiverName\" [userBg]=\"'blue'\" [userColor]=\"'white'\" (notify)=\"showUserName($event)\"></first-char>\n\n        <div class=\"chat-about\">\n          <div class=\"chat-with\">Chat with {{receiverName}}</div>\n        </div>\n      </div>\n      <!-- end chat-header -->\n\n      <div #scrollMe [scrollTop]=\"(scrollToChatTop)?0:scrollMe.scrollHeight\" class=\"chat-history\" *ngIf=\"receiverName\">\n\n        <ul>\n          <li class=\"textCenter\" *ngIf=\"receiverName\">\n\n            <span  class=\"cursorPointer\" (click)=\"loadEarlierPageOfChat()\">Load Previous Chat</span>\n\n            <br>\n\n            <span *ngIf=\"loadingPreviousChat == true\">Loading...</span>\n\n          </li>\n          <li class=\"clearfix\" *ngFor=\"let message of messageList\">\n            <div class=\"message-data\" [ngClass]=\"{'align-right': message.senderId == userInfo.userId}\">\n              <span class=\"message-data-time\">{{message?.createdOn | date: 'medium' }}</span> &nbsp; &nbsp;\n              <span class=\"message-data-name floatLeft\" *ngIf=\"message.senderId != userInfo.userId\">\n                <i class=\"fa fa-circle online\"></i> {{ message?.senderName }}</span>\n              <span class=\"message-data-name\" *ngIf=\"message.senderId == userInfo.userId\">{{ message?.senderName }}</span>\n              <i class=\"fa fa-circle me\" *ngIf=\"message.senderId == userInfo.userId\"></i>\n\n            </div>\n            <div class=\"message\" [ngClass]=\"{'float-right other-message': message.senderId == userInfo.userId, 'my-message': message.senderId != userInfo.userId}\">\n              {{message?.message | removeSpecialCharPipe: '#' | removeSpecialCharPipe: '$'}}\n            </div>\n          </li>\n\n        </ul>\n\n      </div>\n      <div *ngIf=\"!receiverName\" class=\"col-sm blankContent\">\n        Click on user for start a chat!!!\n      </div>\n      <!-- end chat-history -->\n\n      <div class=\"chat-message clearfix p-2\" *ngIf=\"receiverName\">\n        <textarea name=\"message-to-send\" id=\"message-to-send\" (keydown)=\"sendMessageUsingKeypress($event)\" [(ngModel)]=\"messageText\"\n          placeholder=\"Type your message\" rows=\"3\"></textarea>\n\n        <button (click)=\"sendMessage()\">Send</button>\n\n      </div>\n      <!-- end chat-message -->\n\n    </div>\n\n  </div>\n  <!-- end chat -->\n\n</div>\n<!-- end container -->\n\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n@Injectable()\nexport class ChatRouteGuardService implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n\n    console.log(\"in guard service\");\n\n    if (Cookie.get('authtoken') === undefined || Cookie.get('authtoken') === '' || Cookie.get('authtoken') === null) {\n\n      this.router.navigate(['/']);\n\n      return false;\n\n    } else {\n\n      return true;\n\n    }\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//import the comonent\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\n//import routing module, toastr module\nimport { RouterModule, Routes } from '@angular/router';\nimport { ToastrModule } from 'ng6-toastr-notifications';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n//import shared module and its components\nimport { SharedModule } from '../shared/shared.module';\nimport { UserDetailsComponent } from '../shared/user-details/user-details.component';\nimport { RemoveSpecialCharPipe } from './../shared/pipe/remove-special-char.pipe';\n//import the service to be used\nimport { ChatRouteGuardService } from './chat-route-guard.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forChild([ \n      { path: 'chat', component: ChatBoxComponent,canActivate:[ChatRouteGuardService] }\n    ]),\n    SharedModule\n  ],\n  declarations: [ChatBoxComponent,RemoveSpecialCharPipe],\n  providers:[ChatRouteGuardService]\n})\nexport class ChatModule { }\n","import { Component, OnChanges, Input, EventEmitter, Output, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'first-char',\n  templateUrl: './first-char.component.html',\n  styleUrls: ['./first-char.component.css']\n})\nexport class FirstCharComponent implements OnInit,OnChanges {\n\n  @Input() name: string;\n  @Input() userBg: string;\n  @Input() userColor: string;\n\n  public firstChar: string;\n  private _name:string = '';\n\n  @Output()\n  notify: EventEmitter<String> = new EventEmitter<String>();\n\n\n\n  ngOnInit(): void {\n      this._name = this.name;\n      this.firstChar = this._name[0];\n\n  } // end ngOnInit\n\n\n  ngOnChanges(changes: SimpleChanges){\n    let name  = changes.name;\n    this._name = name.currentValue;\n    this.firstChar = this._name[0];\n  }\n\n\n  nameClicked(){\n    this.notify.emit(this._name);\n  }\n\n  \n\n   \n\n\n  \n  \n\n}\n","<div (click)='nameClicked()'  class=\"crop\" [style.color]=\"userColor ? userColor :'white'\" [style.background]=\"userBg ? userBg :'blue'\">\n    {{firstChar}}\n  </div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'removeSpecialCharPipe'\n})\nexport class RemoveSpecialCharPipe implements PipeTransform {\n\n    transform(value: string, character: string): string {\n\n        return value.replace(character, '');\n\n    }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { FormsModule } from '@angular/forms';\nimport { FirstCharComponent } from './first-char/first-char.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [UserDetailsComponent, FirstCharComponent],\n  //to use the components across the application add the components inside exports array\n  exports: [\n    UserDetailsComponent,\n    FirstCharComponent,\n    CommonModule,\n    FormsModule\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnChanges, Input, EventEmitter, Output, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  @Input() userFirstName: any;\n  @Input() userLastName: string;\n  @Input() userStatus: string;\n  @Input() messageRead: string;\n\n  \n  public firstChar: string;\n  public userColor: string;\n  public userBg:string;\n\n  ngOnInit(): void {\n\n      this.firstChar = this.userFirstName[0];\n\n  } // end ngOnInit\n\n\n  // handling the click\n\n\n\n}\n","<link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n<div class=\"crop\" [style.color]=\"userColor ? userColor :'white'\" [style.background]=\"userBg ? userBg :'blue'\">\n  {{firstChar}}\n</div>\n<div class=\"about\">\n  <div class=\"name\">{{userFirstName}} {{userLastName}}\n    <i *ngIf=\"messageRead\" class=\"fa fa-circle warning\"></i>\n  </div>\n  <div class=\"status\">\n    <i class=\"fa fa-circle\" [ngClass]=\"userStatus\"></i>{{userStatus}}\n  </div>\n</div>","import { Injectable } from '@angular/core';\n\n\nimport * as io from 'socket.io-client';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/toPromise';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from \"@angular/common/http\";\n\n@Injectable()\nexport class SocketService {\n\n  private url = 'https://chatapi.edwisor.com';\n  private socket;\n\n  constructor(public http: HttpClient) {\n    // connection is being created.\n    // that handshake\n    this.socket = io(this.url);\n  }\n\n  // events to be listened \n  public verifyUser = () => {\n\n    return Observable.create((observer) => {\n      this.socket.on('verifyUser', (data) => {\n        observer.next(data);\n      }); // end Socket\n    }); // end Observable\n\n  } // end verifyUser\n\n  public onlineUserList = () => {\n\n    return Observable.create((observer) => {\n      this.socket.on(\"online-user-list\", (userList) => {\n        observer.next(userList);\n      }); // end Socket\n    }); // end Observable\n\n  } // end onlineUserList\n\n\n  public disconnectedSocket = () => {\n\n    return Observable.create((observer) => {\n      this.socket.on(\"disconnect\", () => {\n        observer.next();\n      }); // end Socket\n    }); // end Observable\n\n  } // end disconnectSocket\n  // end events to be listened\n\n  // events to be emitted\n  public setUser = (authToken) => {\n    this.socket.emit(\"set-user\", authToken);\n  } // end setUser\n\n  public markChatAsSeen = (userDetails) => {\n    this.socket.emit('mark-chat-as-seen', userDetails);\n  } // end markChatAsSeen\n  // end events to be emitted\n\n  // chat related methods \n  public getChat(senderId, receiverId, skip): Observable<any> {\n\n    return this.http.get(`${this.url}/api/v1/chat/get/for/user?senderId=${senderId}&receiverId=${receiverId}&skip=${skip}&authToken=${Cookie.get('authtoken')}`)\n      .do(data => console.log('Data Received'))\n      .catch(this.handleError);\n\n  } // end logout function\n\n  public chatByUserId = (userId) => {\n\n    return Observable.create((observer) => {\n      this.socket.on(userId, (data) => {\n        observer.next(data);\n      }); // end Socket\n    }); // end Observable\n\n  } // end chatByUserId\n\n  public SendChatMessage = (chatMsgObject) => {\n    this.socket.emit('chat-msg', chatMsgObject);\n  } // end getChatMessage\n\n\n  public exitSocket = () => {\n    this.socket.disconnect();\n  }// end exit socket\n\n  private handleError(err: HttpErrorResponse) {\n    let errorMessage = '';\n    if (err.error instanceof Error) {\n      errorMessage = `An error occurred: ${err.error.message}`;\n    } else {\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n    } // end condition *if\n    console.error(errorMessage);\n    return Observable.throw(errorMessage);\n  }  // END handleError\n\n}","import { Component, OnInit, ViewContainerRef } from '@angular/core';\n//import routing module\nimport { Router } from '@angular/router';\n//import cookie module to store user login details\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n//import the service to be used\nimport { AppService } from './../../app.service';\n//import toastr module\nimport { ToastrManager } from 'ng6-toastr-notifications';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public email: any;\n  public password: any;\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrManager,\n    vcr: ViewContainerRef,\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  public goToSignUp: any = () => {\n    this.router.navigate(['/sign-up']);\n  } // end goToSignUp\n\n  public signinFunction: any = () => {\n\n    if (!this.email) {\n      this.toastr.warningToastr('enter email')\n    } else if (!this.password) {\n      this.toastr.warningToastr('enter password')\n    } else {\n      let data = {\n        email: this.email,\n        password: this.password\n      }\n      this.appService.signinFunction(data)\n        .subscribe((apiResponse) => {\n\n          if (apiResponse.status === 200) {\n            console.log(apiResponse)\n            Cookie.set('authtoken', apiResponse.data.authToken);\n            Cookie.set('senderId', apiResponse.data.userDetails.userId);\n            Cookie.set('senderName', apiResponse.data.userDetails.firstName + ' ' + apiResponse.data.userDetails.lastName);\n            this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails)\n            this.router.navigate(['/chat']);\n          } else {\n            this.toastr.errorToastr(apiResponse.message)\n          }\n\n        }, (err) => {\n          this.toastr.errorToastr('some error occured')\n        });\n\n    } // end condition\n  } // end signinFunction\n}","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n\n  <a class=\"navbar-brand\" href=\"/\">My Chat</a>\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\n    <span class=\"navbar-toggler-icon\"></span>\n\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n    <ul class=\"navbar-nav\">\n\n      <li class=\"nav-item\">\n\n        <a class=\"nav-link\" (click)=\"goToSignUp()\">Sign-Up</a>\n\n      </li>\n\n    </ul>\n\n  </div>\n\n</nav>\n\n<div class=\"row p-0 m-0\">\n\n  <div class=\"col-sm\"></div>\n\n  <div class=\"col-sm p-5\">\n\n    <h2 class=\"form-signin-heading\">Please sign in</h2>\n\n    <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n\n    <input type=\"email\" id=\"inputEmail\" class=\"form-control\" [(ngModel)]=\"email\" placeholder=\"Email address\" required autofocus>\n\n    <br>\n\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control\" [(ngModel)]=\"password\" placeholder=\"Password\" required>\n\n    <br>\n\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"button\" (click)=\"signinFunction()\">Sign in</button>\n\n  </div>\n\n  <div class=\"col-sm\"></div>\n\n</div>\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { AppService } from './../../app.service';\nimport { Router } from '@angular/router';\nimport { ToastrManager } from 'ng6-toastr-notifications';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public firstName: any;\n  public lastName: any;\n  public mobile: any;\n  public email: any;\n  public password: any;\n  public apiKey: any;\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    private toastr: ToastrManager,\n    vcr: ViewContainerRef) {\n  }\n\n  ngOnInit() {\n  }\n\n  public goToSignIn: any = () => {\n    this.router.navigate(['/']);\n  } // end goToSignIn\n\n  public signupFunction: any = () => {\n\n    if (!this.firstName) {\n      this.toastr.warningToastr('enter first name')\n    } else if (!this.lastName) {\n      this.toastr.warningToastr('enter last name')\n    } else if (!this.mobile) {\n      this.toastr.warningToastr('enter mobile')\n    } else if (!this.email) {\n      this.toastr.warningToastr('enter email')\n    } else if (!this.password) {\n      this.toastr.warningToastr('enter password')\n    } else if (!this.apiKey) {\n      this.toastr.warningToastr('Enter your API key')\n    } else {\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobile: this.mobile,\n        email: this.email,\n        password: this.password,\n        apiKey: this.apiKey\n      }\n      console.log(data);\n      this.appService.signupFunction(data)\n        .subscribe((apiResponse) => {\n\n          console.log(apiResponse);\n          if (apiResponse.status === 200) {\n            this.toastr.successToastr('Signup successful');\n            setTimeout(() => {\n              this.goToSignIn();\n            }, 2000);\n          } else {\n            this.toastr.errorToastr(apiResponse.message);\n          }\n\n        }, (err) => {\n          this.toastr.errorToastr('some error occured');\n        });\n\n    } // end condition\n  } // end signupFunction\n}","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n\n  <a class=\"navbar-brand\" href=\"/\">My Chat</a>\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\n    <span class=\"navbar-toggler-icon\"></span>\n\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\n    <ul class=\"navbar-nav mr-auto\">\n\n      <li class=\"nav-item\">\n\n        <a class=\"nav-link\" (click)=\"goToSignIn()\">Sign-In</a>\n\n      </li>\n\n    </ul>\n\n  </div>\n\n</nav>\n\n<div class=\"row p-0 m-0\">\n\n  <div class=\"col-sm\"></div>\n\n  <div class=\"col-sm p-5\">\n\n    <h2 class=\"form-signin-heading\">Sign Up To Start Chat</h2>\n\n    <br>\n\n    <span>FirstName: </span>\n\n    <label for=\"inputFirstName\" class=\"sr-only\">FirstName</label>\n\n    <input type=\"text\" id=\"inputFirstName\" class=\"form-control\" [(ngModel)]=\"firstName\" placeholder=\"FirstName\" required autofocus>\n\n    <br>\n\n    <span>LastName: </span>\n\n    <label for=\"inputLastName\" class=\"sr-only\">LastName</label>\n\n    <input type=\"text\" id=\"inputLastName\" class=\"form-control\" [(ngModel)]=\"lastName\" placeholder=\"LastName\" required>\n\n    <br>\n\n    <span>Mobile: </span>\n\n    <label for=\"inputMobile\" class=\"sr-only\">Mobile</label>\n\n    <input type=\"number\" id=\"inputMobile\" class=\"form-control\" [(ngModel)]=\"mobile\" placeholder=\"Mobile\" required>\n\n    <br>\n\n    <span>Email: </span>\n\n    <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n\n    <input type=\"email\" id=\"inputEmail\" class=\"form-control\" [(ngModel)]=\"email\" placeholder=\"Email address\" required>\n\n    <br>\n\n    <span>Password: </span>\n\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n\n    <input type=\"password\" id=\"inputPassword\" class=\"form-control\" [(ngModel)]=\"password\" placeholder=\"Password\" required>\n\n    <br>\n\n\n    <span>API Key: </span>\n\n    <label for=\"inputPassword\" class=\"sr-only\">AuthKey</label>\n\n    <textarea type=\"password\" id=\"AuthKey\" class=\"form-control\" [(ngModel)]=\"apiKey\" placeholder=\"API Key\" required></textarea>\n\n    <br>\n\n    <button class=\"btn btn-lg btn-primary btn-block\" type=\"button\" (click)=\"signupFunction()\">Sign Up</button>\n\n  </div>\n\n  <div class=\"col-sm\"></div>\n\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n//import the components\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n//import routing module and forms module\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//import toastr\nimport { ToastrModule } from 'ng6-toastr-notifications';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    //path for login component is already defined in app module so don't redeclare the path in child module\n    RouterModule.forChild([\n      { path: 'sign-up', component: SignupComponent }\n    ])\n  ],\n  declarations: [LoginComponent, SignupComponent]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}